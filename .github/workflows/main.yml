# Main Workflow of eQuantum Project
# Ref: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions
name: Build and deploy eQuantum site

# Runs on workflow_run.conclusion
on:
  push:
    paths:
      - '.github/**'
      - '!**/reserves/**'
  workflow_run:
    types: [completed]
    workflows: ["pages-build-deployment"]
  
# Allow concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Set GITHUB_TOKEN scopes
permissions: write-all

# Global environtment variables
env:
  RUN: ${{ github.run_id }}
  USER: ${{ github.actor }}
  REPO: ${{ github.repository }}
  OWNER: ${{ github.repository_owner }}
  ACTOR: ${{ github.triggering_actor }}
  
jobs:
  determine-runner:
    runs-on: ubuntu-latest
    #container: node:latest
    services:
      postgres:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    outputs:
      runner: ${{ steps.set-runner.outputs.use-runner }}

    steps:
      - name: üìÇ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          #repository: ${{ env.OWNER }}/${{ env.OWNER }}.github.io
          
      - name: ü™Ç Pre-build Maps
        #if: runner.os == 'Windows'
        uses: eq19/maps@v2
        with:
          image_name: "prime"
          image_tag: "latest"
          token: ${{ secrets.ACCESS_TOKEN }}
          docker_hub_username: ${{ github.actor }}
          docker_hub_token: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: üöÄ Build Feed on Linux
        #if: runner.os == 'Windows'
        uses: eq19/feed@v3
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
  
      - name: üîß Setup Lexer on Cloud
        uses: eq19/lexer@v1
        id: set-runner
        with:
          repository: ${{ github.repository }}
          token: ${{ secrets.ACCESS_TOKEN }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
    
  github-pages:
    needs: determine-runner
  
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        #node_version: [8, 10, 12]
        os: [windows-latest, self-hosted]
    runs-on: ${{ matrix.os }}
    #runs-on: ${{ fromJson(needs.determine-runner.outputs.runner) }}
    
    if: ${{github.event_name == 'push' ||
        github.event.workflow_run.conclusion == 'success'}}

    steps:
      - name: üìÇ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: ‚öôÔ∏è Setup Parser
        uses: eq19/parser@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: ‚ö†Ô∏è Evaluate Syntax
        uses: eq19/syntax@v2

      - name: üèÉ‚Äç‚ôÇÔ∏è Set Grammar Rules
        uses: eq19/grammar@v1
