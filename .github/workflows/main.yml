# Deploy GitHub Pages
name: Build and deploy eQuantum site

# Runs on workflow_run.conclusion
on:
  push:
  workflow_run:
    types: [completed]
    workflows: ["pages-build-deployment"]
  
# Allow concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Set GITHUB_TOKEN scopes
permissions: write-all

# Global environtment variables
env:
  RUN: ${{ github.run_id }}
  USER: ${{ github.actor }}
  REPO: ${{ github.repository }}
  OWNER: ${{ github.repository_owner }}
  ACTOR: ${{ github.triggering_actor }}
  
jobs:
  determine-runner:
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.set-runner.outputs.use-runner }}
    steps:
      - name: ðŸ“‚ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
 
      - name: ðŸª‚ Dev Container
        if: ${{ contains(github.repository, 'github.io') }}
        uses: eq19/eq19.github.io@v1
        with:
          docker_hub_username: ${{ github.actor }}
          docker_hub_token: ${{ secrets.DOCKER_HUB_TOKEN }}
          dockerfile_path: ./.devcontainer/Dockerfile
          image_name: "prime"
          image_tag: "latest"

      - name: ðŸš€ Terminate Runner
        uses: eq19/maps@v2
        with:
          primary-runner: "self-hosted,linux"
          fallback-runner: "ubuntu-latest"
          github-token: ${{ secrets.ACCESS_TOKEN }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}

      - name: ðŸš€ Build Feed on Linux
        uses: eq19/feed@v3
        with:
          pre_build_commands: 'make build'
          token: ${{ secrets.ACCESS_TOKEN }}
   
      - name: ðŸš€ Initiate Lexer on Linux
        id: set-runner
        uses: eq19/lexer@v1
        with:
          pre_build_commands: 'gcloud info'
          token: ${{ secrets.ACCESS_TOKEN }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}

  github-pages:
    needs: determine-runner
  
    strategy:
      max-parallel: 1
      fail-fast: false
      matrix:
        #node_version: [8, 10, 12]
        os: [windows-latest, ubuntu-latest] #self-hosted

    runs-on: ${{ matrix.os }}
    #runs-on: ${{ fromJson(needs.determine-runner.outputs.runner) }}
    
    if: ${{github.event_name == 'push' ||
        github.event.workflow_run.conclusion == 'success'}}

    steps:
      - name: ðŸ“‚ Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          repository: eq19/parser

      - name: ðŸš€ Build Parser on Runner
        if: runner.os == 'Windows'
        id: set-runner
        uses: eq19/parser@v1
        with:
          pre_build_commands: 'gcloud info'
          token: ${{ secrets.ACCESS_TOKEN }}
          credentials: ${{ secrets.GCP_CREDENTIALS }}
  
      - name: ðŸª‚ Evaluate Syntax Tree
        if: runner.os == 'Windows'
        uses: Vampire/setup-wsl@v3

      - name: ðŸª‚ Grammar Languange
        #if: ${{ runner.os != 'Windows' && runner.os != 'Linux' }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '3.1.x'
