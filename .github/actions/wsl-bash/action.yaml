name: Azure WSL script runner
description: 'Runs scripts on WSL in Azure machines.'

inputs:
  exec:
    description: Script to run on WSL
    required: true
  working-dir:
    description: The WSL directory to run the script in. Must be absolute, but ~ is allowed.
    required: false
    default: "~"
  distro:
    description: Which (installed) distro to run the script on. Use the name as shown in 'wsl -l -v'. 
    required: false
    default: Ubuntu

runs:
  using: 'composite'
  steps:
    - name: Copy script into WSL
      shell: powershell
      env:
        exec: ${{ inputs.exec }}
        scriptDir: C:\Temp\Ubuntu-WSL-actions\${{github.run_number}}_${{github.run_attempt}}
      run: |
        Write-Output '::group::Storage of script into WSL'
        
        New-Item -Force -Path "${{ env.scriptDir }}" -ItemType Directory | Out-Null

        # The following function is used because:
        # - It does not write the BOM (0xff 0xfe at file start)
        # - It does not write \r at line ends
        # - Overwrites a pre-existing file if there was one
        [IO.File]::WriteAllText( "${{ env.scriptDir }}\script.sh" , "${env:exec}")
        $exit=$?

        Write-Output '::endgroup::'
        if ( "${exit}" -eq "$False" ) { Exit(1) }
    - name: Run linux script
      shell: powershell
      env:
        scriptDir: C:\Temp\Ubuntu-WSL-actions\${{github.run_number}}_${{github.run_attempt}}
        WSL_UTF8: "1"
      run: |
        # Run script

        # We use this --cd trick otherwise bash gets confused with the \ path separators
        $linuxPath = wsl.exe -d "${{ inputs.distro }}" --cd "${{ env.scriptDir }}" -- wslpath -ua .

        wsl.exe -d ${{ inputs.distro }} --cd '${{ inputs.working-dir }}' -- bash "$linuxPath/script.sh"
        if ( ! $? ) { Exit(1) }
    - name: Cleanup
      if: always()
      shell: powershell
      env:
        scriptDir: C:\Temp\Ubuntu-WSL-actions\${{github.run_number}}_${{github.run_attempt}}
      run: |
        if(Test-Path -Path "${{ env.scriptDir }}") {
          Remove-Item -Recurse -Force -Path "${{ env.scriptDir }}"
        }