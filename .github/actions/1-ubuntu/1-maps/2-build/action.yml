name: 'Docker Deploy Action'
description: >
  ðŸª‚  A Github Action to deploy pages conveniently
inputs:
  hub_username:
    description: Username for Docker Hub
    default: ${{ github.actor }}       
    required: true
  hub_password:
    description: Docker Hub authentication token
    required: true
  hub_token:
    description: Docker Hub authentication token
    required: true
  image_name:
    description: "Name for the container to be created. Example: nginx"
    default: 'prime'
    required: false
  action_path:
    description: Path to the dockerfile from which to build the image
    required: true


branding:
  icon: 'command'
  color: 'red'

runs:
  using: composite
  steps:
    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.hub_username }}
        password: ${{ inputs.hub_token }} 
        
    - name: ðŸš€ Initiate Lexer
      uses: devcontainers/ci@v0.3
      with:
        push: always
        runCmd: ls -alR /home/terraform
        skipContainerUserIdUpdate: true
        imageTag: build-${{ github.run_number }}
        configFile: ${{ inputs.action_path }}/.devcontainer.json
        imageName: ${{ inputs.hub_username }}/${{ inputs.image_name }}

    - name: ðŸ’Ž Variables
      id: variables
      shell: bash
      run: |
        IFS=', '; array=($(curl -L -s 'https://registry.hub.docker.com/v2/repositories/${{ inputs.hub_username }}/${{ inputs.image_name }}/tags?page_size=1024'|jq -rc '."results"[]["name"]'))
        for ((i=0; i < ${#array[@]}; i++)); do
          if [ "${array[$i]}" != "latest" ]; then
            HUB_TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"${{ inputs.hub_username }}\", \"password\": \"${{ inputs.hub_password }}\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
            curl -i -X DELETE -H "Accept: application/json" -H "Authorization: JWT $HUB_TOKEN" https://hub.docker.com/v2/namespaces/${{ inputs.hub_username }}/repositories/${{ inputs.image_name }}/tags/${array[$i]}
            echo "deleted: ${{ inputs.hub_username }}/${{ inputs.image_name }}:${array[$i]}"
          fi
        done
